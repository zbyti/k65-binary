func scanliner {

                    // SCANLINE 0, drawing display py

                    //  +6 = s0  6  cost of JSR instruction
    cbg=y y++       //  +5 = s0 11  drawing on
    pf0=x=py0       //  +6 = s0 17  draw nibble 0
    pf1=x=py1       //  +6 = s0 23  draw byte 1
    pf2=x=py2       //  +6 = s0 29  draw byte 2
    c-              //  +2 = s0 31  scan setup A
    a=sbase         //  +3 = s0 34  scan setup B
    a+sdy           //  +3 = s0 37  scan setup C
    sbase=a         //  +3 = s0 40  scan setup D
    *2              //  +2 = s0 42  wait for screen center
    pf2=x=py3       //  +6 = s0 48  draw byte 3
    pf1=x=py4       //  +6 = s0 54  draw byte 4
    pf0=x=py5       //  +6 = s0 60  draw nibble 5
    a+sdx           //  +3 = s0 63  step
    px0>>>          //  +5 = s0 68  shift pixel 1
    a+sdx           //  +3 = s0 71  step
    px0>>>          //  +5 = s1  0  shift pixel 2

                    // SCANLINE 1, drawing off

    cbg=x=0         //  +5 = s1  5  drawing off
    a+sdx           //  +3 = s1  8  step
    px0>>>          //  +5 = s1 13  shift pixel 3
    a+sdx           //  +3 = s1 16  step
    px0>>>          //  +5 = s1 21  shift pixel 4
    a+sdx           //  +3 = s1 24  step
    px1<<<          //  +5 = s1 29  shift pixel 5
    a+sdx           //  +3 = s1 32  step
    px1<<<          //  +5 = s1 37  shift pixel 6
    a+sdx           //  +3 = s1 40  step
    px1<<<          //  +5 = s1 45  shift pixel 7
    a+sdx           //  +3 = s1 48  step
    px1<<<          //  +5 = s1 53  shift pixel 8
    a+sdx           //  +3 = s1 56  step
    px1<<<          //  +5 = s1 61  shift pixel 9
    a+sdx           //  +3 = s1 64  step
    px1<<<          //  +5 = s1 69  shift pixel 10
    a+sdx           //  +3 = s1 72  step
    px1<<<          //  +5 = s2  1  shift pixel 11

                    // SCANLINE 2, drawing off

    a+sdx           //  +3 = s2  4  step
    px1<<<          //  +5 = s2  9  shift pixel 12
    a+sdx           //  +3 = s2 12  step
    px2>>>          //  +5 = s2 17  shift pixel 13
    a+sdx           //  +3 = s2 20  step
    px2>>>          //  +5 = s2 25  shift pixel 14
    a+sdx           //  +3 = s2 28  step
    px2>>>          //  +5 = s2 33  shift pixel 15
    a+sdx           //  +3 = s2 36  step
    px2>>>          //  +5 = s2 41  shift pixel 16
    a+sdx           //  +3 = s2 44  step
    px2>>>          //  +5 = s2 49  shift pixel 17
    a+sdx           //  +3 = s2 52  step
    px2>>>          //  +5 = s2 57  shift pixel 18
    a+sdx           //  +3 = s2 60  step
    px2>>>          //  +5 = s2 65  shift pixel 19
    a+sdx           //  +3 = s2 68  step
    px2>>>          //  +5 = s2 73  shift pixel 20
    a+sdx           //  +3 = s3  0  step

                    // SCANLINE 3, drawing display py

    cbg=y y++       //  +5 = s3  5  drawing on
    pf0=x=py0       //  +6 = s3 11  draw nibble 0
    pf1=x=py1       //  +6 = s3 17  draw byte 1
    pf2=x=py2       //  +6 = s3 23  draw byte 2
    px3<<<          //  +5 = s3 28  shift pixel 21
    a+sdx           //  +3 = s3 31  step
    px3<<<          //  +5 = s3 36  shift pixel 22
    a+sdx           //  +3 = s3 39  step
    *3              //  +3 = s3 42  wait for screen center
    pf2=x=py3       //  +6 = s3 48  draw byte 3
    pf1=x=py4       //  +6 = s3 54  draw byte 4
    pf0=x=py5       //  +6 = s3 60  draw nibble 5
    px3<<<          //  +5 = s3 65  shift pixel 23
    a+sdx           //  +3 = s3 68  step
    px3<<<          //  +5 = s3 73  shift pixel 24
    a+sdx           //  +3 = s4  0  step

                    // SCANLINE 4, drawing off

    cbg=x=0         //  +5 = s4  5  drawing off
    px3<<<          //  +5 = s4 10  shift pixel 25
    a+sdx           //  +3 = s4 13  step
    px3<<<          //  +5 = s4 18  shift pixel 26
    a+sdx           //  +3 = s4 21  step
    px3<<<          //  +5 = s4 26  shift pixel 27
    a+sdx           //  +3 = s4 29  step
    px3<<<          //  +5 = s4 34  shift pixel 28
    a+sdx           //  +3 = s4 37  step
    px4>>>          //  +5 = s4 42  shift pixel 29
    a+sdx           //  +3 = s4 45  step
    px4>>>          //  +5 = s4 50  shift pixel 30
    a+sdx           //  +3 = s4 53  step
    px4>>>          //  +5 = s4 58  shift pixel 31
    a+sdx           //  +3 = s4 61  step
    px4>>>          //  +5 = s4 66  shift pixel 32
    a+sdx           //  +3 = s4 69  step
    px4>>>          //  +5 = s4 74  shift pixel 33
    a+sdx           //  +3 = s5  1  step

                    // SCANLINE 5, drawing off

    px4>>>          //  +5 = s5  6  shift pixel 34
    a+sdx           //  +3 = s5  9  step
    px4>>>          //  +5 = s5 14  shift pixel 35
    a+sdx           //  +3 = s5 17  step
    px4>>>          //  +5 = s5 22  shift pixel 36
    a+sdx           //  +3 = s5 25  step
    px5<<<          //  +5 = s5 30  shift pixel 37
    a+sdx           //  +3 = s5 33  step
    px5<<<          //  +5 = s5 38  shift pixel 38
    a+sdx           //  +3 = s5 41  step
    px5<<<          //  +5 = s5 46  shift pixel 39
    a+sdx           //  +3 = s5 49  step
    a=px5           //  +3 = s5 52  last shift start
    a<<<            //  +2 = s5 54  shift pixel 40
    a<<<            //  +2 = s5 56  dead shift
    a<<<            //  +2 = s5 58  dead shift
    a<<<            //  +2 = s5 60  dead shift
    a<<<            //  +2 = s5 62  dead shift
    px5=a           //  +3 = s5 65  dead shift end
                    //  +0 = s5 65  SWAP!!!
    c-              //  +2 = s5 67  scan setup A
    a=sbase         //  +3 = s5 70  scan setup B
    a+sdy           //  +3 = s5 73  scan setup C
    sbase=a         //  +3 = s6  0  scan setup D

                    // SCANLINE 6, drawing display px

    cbg=y y++       //  +5 = s6  5  drawing on
    pf0=x=px0       //  +6 = s6 11  draw nibble 0
    pf1=x=px1       //  +6 = s6 17  draw byte 1
    pf2=x=px2       //  +6 = s6 23  draw byte 2
    a+sdx           //  +3 = s6 26  step
    py0>>>          //  +5 = s6 31  shift pixel 1001
    a+sdx           //  +3 = s6 34  step
    py0>>>          //  +5 = s6 39  shift pixel 1002
    *3              //  +3 = s6 42  wait for screen center
    pf2=x=px3       //  +6 = s6 48  draw byte 3
    pf1=x=px4       //  +6 = s6 54  draw byte 4
    pf0=x=px5       //  +6 = s6 60  draw nibble 5
    a+sdx           //  +3 = s6 63  step
    py0>>>          //  +5 = s6 68  shift pixel 1003
    a+sdx           //  +3 = s6 71  step
    py0>>>          //  +5 = s7  0  shift pixel 1004

                    // SCANLINE 7, drawing off

    cbg=x=0         //  +5 = s7  5  drawing off
    a+sdx           //  +3 = s7  8  step
    py1<<<          //  +5 = s7 13  shift pixel 1005
    a+sdx           //  +3 = s7 16  step
    py1<<<          //  +5 = s7 21  shift pixel 1006
    a+sdx           //  +3 = s7 24  step
    py1<<<          //  +5 = s7 29  shift pixel 1007
    a+sdx           //  +3 = s7 32  step
    py1<<<          //  +5 = s7 37  shift pixel 1008
    a+sdx           //  +3 = s7 40  step
    py1<<<          //  +5 = s7 45  shift pixel 1009
    a+sdx           //  +3 = s7 48  step
    py1<<<          //  +5 = s7 53  shift pixel 1010
    a+sdx           //  +3 = s7 56  step
    py1<<<          //  +5 = s7 61  shift pixel 1011
    a+sdx           //  +3 = s7 64  step
    py1<<<          //  +5 = s7 69  shift pixel 1012
    a+sdx           //  +3 = s7 72  step
    py2>>>          //  +5 = s8  1  shift pixel 1013

                    // SCANLINE 8, drawing off

    a+sdx           //  +3 = s8  4  step
    py2>>>          //  +5 = s8  9  shift pixel 1014
    a+sdx           //  +3 = s8 12  step
    py2>>>          //  +5 = s8 17  shift pixel 1015
    a+sdx           //  +3 = s8 20  step
    py2>>>          //  +5 = s8 25  shift pixel 1016
    a+sdx           //  +3 = s8 28  step
    py2>>>          //  +5 = s8 33  shift pixel 1017
    a+sdx           //  +3 = s8 36  step
    py2>>>          //  +5 = s8 41  shift pixel 1018
    a+sdx           //  +3 = s8 44  step
    py2>>>          //  +5 = s8 49  shift pixel 1019
    a+sdx           //  +3 = s8 52  step
    py2>>>          //  +5 = s8 57  shift pixel 1020
    a+sdx           //  +3 = s8 60  step
    py3<<<          //  +5 = s8 65  shift pixel 1021
    a+sdx           //  +3 = s8 68  step
    py3<<<          //  +5 = s8 73  shift pixel 1022
    a+sdx           //  +3 = s9  0  step

                    // SCANLINE 9, drawing display px

    cbg=y y++       //  +5 = s9  5  drawing on
    pf0=x=px0       //  +6 = s9 11  draw nibble 0
    pf1=x=px1       //  +6 = s9 17  draw byte 1
    pf2=x=px2       //  +6 = s9 23  draw byte 2
    py3<<<          //  +5 = s9 28  shift pixel 1023
    a+sdx           //  +3 = s9 31  step
    py3<<<          //  +5 = s9 36  shift pixel 1024
    a+sdx           //  +3 = s9 39  step
    *3              //  +3 = s9 42  wait for screen center
    pf2=x=px3       //  +6 = s9 48  draw byte 3
    pf1=x=px4       //  +6 = s9 54  draw byte 4
    pf0=x=px5       //  +6 = s9 60  draw nibble 5
    py3<<<          //  +5 = s9 65  shift pixel 1025
    a+sdx           //  +3 = s9 68  step
    py3<<<          //  +5 = s9 73  shift pixel 1026
    a+sdx           //  +3 = s10  0  step

                    // SCANLINE 10, drawing off

    cbg=x=0         //  +5 = s10  5  drawing off
    py3<<<          //  +5 = s10 10  shift pixel 1027
    a+sdx           //  +3 = s10 13  step
    py3<<<          //  +5 = s10 18  shift pixel 1028
    a+sdx           //  +3 = s10 21  step
    py4>>>          //  +5 = s10 26  shift pixel 1029
    a+sdx           //  +3 = s10 29  step
    py4>>>          //  +5 = s10 34  shift pixel 1030
    a+sdx           //  +3 = s10 37  step
    py4>>>          //  +5 = s10 42  shift pixel 1031
    a+sdx           //  +3 = s10 45  step
    py4>>>          //  +5 = s10 50  shift pixel 1032
    a+sdx           //  +3 = s10 53  step
    py4>>>          //  +5 = s10 58  shift pixel 1033
    a+sdx           //  +3 = s10 61  step
    py4>>>          //  +5 = s10 66  shift pixel 1034
    a+sdx           //  +3 = s10 69  step
    py4>>>          //  +5 = s10 74  shift pixel 1035
    a+sdx           //  +3 = s11  1  step

                    // SCANLINE 11, drawing off

    py4>>>          //  +5 = s11  6  shift pixel 1036
    a+sdx           //  +3 = s11  9  step
    py5<<<          //  +5 = s11 14  shift pixel 1037
    a+sdx           //  +3 = s11 17  step
    py5<<<          //  +5 = s11 22  shift pixel 1038
    a+sdx           //  +3 = s11 25  step
    py5<<<          //  +5 = s11 30  shift pixel 1039
    a+sdx           //  +3 = s11 33  step
    a=py5           //  +3 = s11 36  last shift start
    a<<<            //  +2 = s11 38  shift pixel 1040
    a<<<            //  +2 = s11 40  dead shift
    a<<<            //  +2 = s11 42  dead shift
    a<<<            //  +2 = s11 44  dead shift
    a<<<            //  +2 = s11 46  dead shift
    py5=a           //  +3 = s11 49  dead shift end
                    //  +0 = s11 49  SWAP!!!
                    //  +6 = s11 55  cost of RTS
                    //  +5 = s11 60  cost of DEC outside this routine
                    //  +3 = s11 63  cost of BNE outside this routine
    *13             // +13 = s11 76  wait for wsync
}
