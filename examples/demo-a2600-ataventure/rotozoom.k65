

data RotoSin {
	align 256
	for x=0..255 eval [sin(x/256*2*pi*3)*14+256]
}


func rotozoomer {
	wsync
	cpf=a=0 ctpf=a=1
	a=0xFF py0=a py1=a py2=a py3=a py4=a py5=a

	//a=subframe  a<< sdx=a
	//a=midframe  a<< sdy=a

	a=demo_event
	a?4
	<{
//		a=subframe  sdx=a
//		a=smallframe  a<< y=a a=RotoSin,y a<< sdy=a
		a=subframe a<< sdx=a
		a=smallframe c- a+subframe y=a a=RotoSin,y a<< sdy=a
	} else {
		a=subframe			y=a		c- a+smallframe x=a		a=RotoSin,y c- a+RotoSin,x	tmp1=a	a<< c- a+tmp1	sdx=a
		a=subframe c- a+64	y=a		c- a+smallframe x=a		a=RotoSin,y c- a+RotoSin,x	a<<						sdy=a
	}


	txtc=a=5
	txtc+1=a=0
	
	a=0x80
	y=10 { a-sdx a-sdx a-sdy a-sdy y-- }!=
	sbase=a;
	tmp1=a=14

	a=demo_event
	a?4
	<{
		a=subframe y=a
	} else {
		a=subframe a^0xFF y=a
	}

	wsync
	nocross { scanliner tmp1-- } !=
	cbg=a=0 pf0=a pf1=a pf2=a cpf=a
}

func seq_rotozoomer {
	{ 
		far fsync1 far song_player
		fsync2
		far fsync3
		rotozoomer
		a=demo_event
		a?8
	}< demo_event=a=0
}





inline fbroto_core_l {
	a+sdx a?0x80 tmp3<<<
}

inline fbroto_core_r { 
	a+sdx a?0x80 tmp3>>>
}

inline fbroto_core_l_x8 {
	fbroto_core_l
	fbroto_core_l
	fbroto_core_l
	fbroto_core_l
	fbroto_core_l
	fbroto_core_l
	fbroto_core_l
	fbroto_core_l
}

inline fbroto_core_r_x8 {
	fbroto_core_r
	fbroto_core_r
	fbroto_core_r
	fbroto_core_r
	fbroto_core_r
	fbroto_core_r
	fbroto_core_r
	fbroto_core_r
}

inline fbroto_setup {
	a=subframe x=a c- a+64 y=a
	sdx=a=RotoSin,x
	sdy=a=RotoSin,y
		  a^0xFF c- a+1 a<< a<< a<<		c- a+0xC0  sbase=a
	a=sdx a^0xFF c- a+1 a<< a<< a<< a<< c- a+sbase sbase=a
}

func fbroto_line {
	// X - line Y position
	a=sbase c- a+sdy sbase=a
	c-
	fbroto_core_l_x8 frambuff,x=y=tmp3
	fbroto_core_r_x8 frambuff+16,x=y=tmp3
	fbroto_core_l_x8 frambuff+32,x=y=tmp3
	fbroto_core_r_x8 frambuff+48,x=y=tmp3
}

func fx_fbrotozoom {

	far fsync1 far song_player

	x=4 fbroto_line
	x++	fbroto_line

	fsync2

	x=6 fbroto_line
	x++	fbroto_line
	x++	fbroto_line
	x++	fbroto_line
	x++	fbroto_line
	x++	fbroto_line
	x++	fbroto_line

	far fsync3

	x=13 fbroto_line
	x++	fbroto_line
	x++	fbroto_line

	{ a=INTIM a?186 }!=
	wsync
	txtc=a=0
	txtc+1=a=&>BufCol
	far drawbuffer

	fbroto_setup
	x=0 fbroto_line
	x++	fbroto_line
	x++	fbroto_line
	x++	fbroto_line

}

data BufCol2 {
	align 256
	for x = 0 .. 127 eval [round(cos(x/128*2*pi+pi)*3.5+3.5 + .49*sin(x*cos(x*100)) )*2+5*16]
}

inline roto2_draw_init {
	wsync a=7 ns0=a ns1=a a=0 cp0=a cp1=a cpf=a pf0=a=0xFF ctpf=a=1 *5 rp0=a hp0=a=0x10 *2 rp1=a hp1=a=0xF0
	wsync hmove=a
}

/*
	0000000000111111111122222222223333333333
	0123456789012345678901234567890123456789
	aaaabbbbbbbbccccccccaaaabbbbbbbbcccccccc
	aaaabbbbbbbbccccccccccccccccbbbbbbbbaaaa

	aaaabbbbbbbbccccccccaaaabbbbbbbbcccccccc
	****      11111111^^^^^^22222222    ^^**
*/

inline fbroto_core2_l {
	a=px0 a+px1 px0=a	// 3+3+3 = 9
	a=py0 a+py1 py0=a	// 3+3+3 = 9
	a^px0 a<<< tmp3<<<	// 3+2+5 = 10
						// total = 28
}

inline fbroto_core2_lx8 {
	a=px0						// 3
		a+px1 a?0x80 tmp3<<<	// (3+2+5)*8 = 80
		a+px1 a?0x80 tmp3<<<
		a+px1 a?0x80 tmp3<<<
		a+px1 a?0x80 tmp3<<<
		a+px1 a?0x80 tmp3<<<
		a+px1 a?0x80 tmp3<<<
		a+px1 a?0x80 tmp3<<<
		a+px1 a?0x80 tmp3<<<
	// same for py -> tmp4		// = 83
	a=tmp3 a^tmp4 gp0=a			// presentation = 9
								// total = 175
}

inline fbroto_core2_line {
	a=px3 a+px2 px3=a px0=a		// 3+3+3+3 = 12
	a=py3 a+py2 py3=a py0=a		// 3+3+3+3 = 12
								// total   = 24
}

func fbrotocore2_x8 {
	fbroto_core2_l
	fbroto_core2_l
	fbroto_core2_l
	fbroto_core2_l
	fbroto_core2_l
	fbroto_core2_l
	fbroto_core2_l
	fbroto_core2_l
}


inline fbrx3 { a-px1 a?0x80 tmp3>>> }
inline fbrx4 { a-px1 a?0x80 tmp4>>> }
inline fbry5 { a-py1 a?0x80 tmp5>>> }
inline fbry6 { a-py1 a?0x80 tmp6>>> }

func fbroff {
	a=px0 a+px2 px0=a
	fbrx3 fbrx3 fbrx3 fbrx3 fbrx3 fbrx3 fbrx3 fbrx3
	fbrx4 fbrx4 fbrx4 fbrx4 fbrx4 fbrx4 fbrx4 fbrx4
	a=py0 a+py2 py0=a
	fbry5 fbry5 fbry5 fbry5 fbry5 fbry5 fbry5 fbry5
	fbry6 fbry6 fbry6 fbry6 fbry6 fbry6 fbry6 fbry6
	a=tmp3 a^tmp5 frambuff+32,x=a
	a=tmp4 a^tmp6 frambuff,x=a
}

data SmoothSin {
	align 64
	for x=0..63 eval [sin(x/64*2*pi)*128+256]
}

func fx_fbrotozoom2 {

	far fsync1 far song_player

	x=5 fbroff
	x++ fbroff
	x++ fbroff

	fsync2

	x=8 fbroff
	x++ fbroff
	x++ fbroff
	x++ fbroff
	x++ fbroff
	x++ fbroff
	x++ fbroff
	x++ fbroff

	far fsync3
	wsync

	x=16 fbroff
	x++ fbroff
	x++ fbroff
	x++ fbroff

	dfx2=a=smallframe
	dfx3=a=0x7F
	dfxN=a=0x0F
	a=songpos_seq a<< a<< a<< a<<
	a|songpos_step a<< a<<
	a&0xF0
	dfx4=a
	tmp2=a=&>BufCol2
	roto2_draw_init

	frambuff=a=frambuff+1
	frambuff+32=a=frambuff+33

	a=frambuff pf1=a
	a=frambuff+32 gp0=a 
	x=0xFF
	//{ a=INTIM a?182 }!=
	nocross {
		wsync
		scanliner2
	}<
	x++ gp0=a=frambuff+32,x

	y=2 nocross { wsync pf1=a=frambuff,x *40 pf1=a=tmp7 y-- }>=0
	a=0 gp0=a gp1=a *2 pf1=a pf2=a cbg=a

	//demo_event=a=7
	a=demo_event
	a?8 <{
		a?4	<{	a=18		}
		else {	y=subframe	a=RotoSin,y	c- a+20	}
		px2=a py1=a
		a=0								px1=a py2=a
		a=subframe 					a&0x3F x=a	c- a+smallframe	a=SmoothSin,x 	px3=a px0=a
		a=subframe c- a+smallframe  a&0x3F x=a	c- a+subframe	a=SmoothSin,x 	py3=a py0=a
	}
	else
	{
		a=subframe			x=a	c- a+smallframe y=a a=RotoSin,x c- a+RotoSin,y px1=a
		a=subframe c- a+64  x=a	c- a+smallframe y=a a=RotoSin,x c- a+RotoSin,y py1=a px2=a
		a=subframe c- a+128 x=a	c- a+smallframe y=a a=RotoSin,x c- a+RotoSin,y	     py2=a

		a=px2 a^0xFF c- a+1 tmp1=a a<< a<< a<< c- a+64 px3=a px0=a
		a=py2 a^0xFF c- a+1 tmp1=a a<< a<< a<< c- a+64 py3=a py0=a
		
		
		a=demo_event
		a?12 >={
			a=subframe a<< a<< a<< a<< c- a+px0 px3=a px0=a
			//a=subframe 					a&0x3F x=a	c- a+smallframe	a=SmoothSin,x 	a<<	a+px0 px3=a px0=a
			//a=subframe c- a+smallframe  a&0x3F x=a	c- a+subframe	a=SmoothSin,x 	a<<	a+py0 py3=a py0=a
		}
	}

	x=1 fbroff
	x++ fbroff
	x++ fbroff
	x++ fbroff
}


func seq_fbrotozoom2 {
	{
		fx_fbrotozoom2
		a=demo_event a?16
	}<
	demo_event=a=0
}
