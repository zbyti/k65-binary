


data DmaLogoLight {
	align 128 + 112
	0xD1 0xD3 0xD5 0xD7 0xD9 0xDB 0xDC 0xDE 0xDE 0xDC 0xDB 0xD9 0xD7 0xD5 0xD3 0xD1
}

data DmaLogoShade {
	0xD0 0x50 0xA0 0x30
}

data DmaLogo {
	align 256
	0
	image dma1  0 65 8> 16^	tiles 8 0 5		// 0..95
	image dma1 50 65 8> 16^	tiles 8 0 5		// 96+
}

data CredLogo {
	align 64
	0
	image dma1 0 72 8> 4^	tiles 8 0 5
}

data CredLogoCol {
	align 16
	0
	0xD1 0xD3 0xD5 0xD7 0xD9 0xDB 0xDC 0xDE
}

data DmaWaveCol {
	align 256 + 192
	0xD0 0xD1 0xD2 0xD0 0xD1 0xD0 0xD3 0xD3
	0xD1 0xD0 0xD0 0xD0 0xD2 0xD2 0xD5 0xD4
	0xD0 0xD0 0xD1 0xD1 0xD3 0xD4 0xD4 0xD2
	0xD0 0xD0 0xD2 0xD3 0xD3 0xD1 0xD2 0xD0
}

data DmaWave {
	align 256
	0
	imgwave 3 3 1 1 0 2 2
	image dma1 0 50 8> 8v	tiles 8 0 5
	// 0xA1 0xA1 0xA3 0xA3 0xA5 0xA5 0xA7 0xA3
//	0xD1 0xD4 0xD4 0xD2 0xD2 0xD1 0xD3 0xD3
	0xD0 0xD1 0xD2 0xD0 0xD1 0xD0 0xD3 0xD3
	0 0 0 0 0 0 0 0

	imgwave 2 1 0 2 2 4 3
	image dma1 0 51 8> 8v	tiles 8 0 5
//	0xD2 0xD3 0xD2 0xD1 0xD3 0xD3 0xD5 0xD4
	0xD0 0xD0 0xD0 0x00 0xD2 0xD2 0xD5 0xD4
	0 0 0 0 0 0 0 0

	imgwave 0 2 2 3 4 3 1
	image dma1 0 50 8> 8v	tiles 8 0 5
//	0xD1 0xD1 0xD3 0xD3 0xD4 0xD5 0xD4 0xD2
	0x00 0x00 0xD1 0xD1 0xD3 0xD4 0xD4 0xD2
	0 0 0 0 0 0 0 0

	imgwave 0 3 4 3 1 1 0
	image dma1 0 50 8> 8v	tiles 8 0 5
//	0xD1 0xD1 0xD4 0xD5 0xD4 0xD2 0xD2 0xD0
	0x00 0x00 0xD2 0xD3 0xD3 0xD1 0xD2 0xD0
	0 0 0 0 0 0 0 0

	imgwave
}




/*func colbuff_logo {

	a=midframe c- a+16 tmp1=a
	y=16
	{
		a=tmp1 a>> a&0xF				x=a	a=DmaLogoLight,x	tmp2=a
		a=tmp1 a>> a>> a>> a>> a>> a&3	x=a	a=DmaLogoShade,x	a|tmp2
		colbuf-1,y = a
		tmp1--
		y--
	}!=
}

func colbuff_wave {

	a=subframe a<< a&0x18 tmp4=a

	a=midframe tmp1=a
	tmp3=a=0x0E
	y=8
	{
		a=y c- a+tmp4 x=a	a=DmaWaveCol-1,x	tmp2=a
		!={ a=tmp1 a>> a>> a>> a>> a>> a&3	x=a	a=DmaLogoShade,x	a|tmp2 }
		colbuf2-1,y = a
		tmp1++
		tmp1++
		y--
	}!=
}*/



func bigmap_logo {
	tmp1=y	endline=a c- a+tmp1	tmp1=a
	a=&<DmaLogoLight a-endline txtc=a txtc+1=a=&>DmaLogoLight
	wsync *65
	y=tmp1
	nocross
	{					// +0	 0
		a=DmaLogo,y		// +4	 7		0x83
		gp0=a			// +3	10
		a=(txtc),y		// +5	15		0x88
		cbg=a			// +3	18
		a=DmaLogo+16,y	// +4	26		0x90
		gp1=a			// +3	29
		a=DmaLogo+32,y	// +4	33		0x95
		gp0=a			// +3	36
		a=DmaLogo+80,y	// +4	40		0x9A
		tmp2=a			// +3	43
		a=DmaLogo+64,y	// +4	47		0x9F
		x=a				// +2	49
		a=DmaLogo+48,y	// +4	53		0xA3
		y=tmp2			// +3	56
		gp1=a			// +3	59*
		gp0=x			// +3	62*
		gp1=y			// +3	65*
		gp0=a			// +3	68*
		tmp1--			// +5	73
		y=tmp1			// +3	 3
		y?endline_hi	// +4	22
	}!=					// +3	76
	*2 cbg=a=0
}

func bigmap_wave {
	a=subframe a<< a<< a<< a<< a&0xC0
	endline=a c- a+8 tmp1=a
	//a=&<colbuf2 c- a-endline txtc=a txtc+1=a=&>colbuf2

	a=subframe a<< a&0x18 c- a+&<DmaWaveCol c- a-endline txtc=a txtc+1=a=&>DmaWaveCol


	wsync *65
	y=tmp1
	nocross
	{					// +0	 0
		a=DmaWave,y		// +4	 7		0x83
		gp0=a			// +3	10
		a=(txtc),y		// +5	15		0x88
		cbg=a			// +3	18
		a=DmaWave+ 8,y	// +4	26		0x90
		gp1=a			// +3	29
		a=DmaWave+16,y	// +4	33		0x95
		gp0=a			// +3	36
		a=DmaWave+40,y	// +4	40		0x9A
		tmp2=a			// +3	43
		a=DmaWave+32,y	// +4	47		0x9F
		x=a				// +2	49
		a=DmaWave+24,y	// +4	53		0xA3
		y=tmp2			// +3	56
		gp1=a			// +3	59*
		gp0=x			// +3	62*
		gp1=y			// +3	65*
		gp0=a			// +3	68*
		tmp1--			// +5	73
		y=tmp1			// +3	 3
		y?endline_hi	// +4	22
	}!=					// +3	76
	*2 cbg=a=0
}


//data bigwahs {
//	for x=0..31 eval [255-(1<<round(sin(x/32*2*pi)*3.5+3.5))]
//}
//	a=subframe a&0x1F y=a pf1=a=bigwahs,y


inline biginit1 {

	wsync gp0=a=0 gp1=a hmclr=a ns0=a=3 ns1=a
	hp0=a=0x10 hp1=a=0x20 *8 rp0=a rp1=a

	cp0=a=0 cp1=a ctpf=a=1

	a=1 vdp0=a vdp1=a
	wsync cbg=a=0 cpf=a
	a=0 pf0=a pf2=a pf1=a
}

inline biginit2 {
	wsync hmove=a *24 hp0=a=0x00 hp1=a
}

inline bigclean {
	a=0 vdp0=a vdp1=a cbg=a gp0=a gp1=a pf0=a pf1=a pf2=a
}

data FrameHack {
	align 256 + 255
	0
}

inline frameline {
	wsync //*17
	a=subframe_hi a&1 x=a a=FrameHack,x a=FrameHack,x

	cbg=a=0x04 cbg=a=0x06 cbg=a=0x08 cbg=a=0x0A cbg=a=0x0C
	cbg=a=0x0E cbg=a=0x0C cbg=a=0x0A cbg=a=0x08 cbg=a=0x06 cbg=a=0x04 cbg=a=0x00
}

func fsync1 {
	timwait
	biginit1
	frameline
	pf0=a=0xFF pf1=a pf2=a=0x03
	biginit2
	a=106
	a=smallframe a&0x7F
	c+ a-0x40 <0 { a^0xFF c- a+1 }
	c- a+72
	a?100 <{ a=100 }
	a?106 >={ a=106 } a=106

	y=6 bigmap_logo
	bigclean
	//wsync

	// enter overscan
	sync1f

	// animate
	subframe++
	a=0x01 a&?subframe =={ smallframe++ }
	a=0x03 a&?subframe =={ midframe++ }
	a=0x07 a&?subframe =={ frame++ }
	//a=0xFF a&?subframe =={ demo_event++ }

//	a=demo_event =={
//		a=SWCHB a&2 =={ demo_event=a=1 }
//	}
//	else
//	{
//		a=SWCHB a&2 !={ demo_event=a=0x80 }
//	}
}

inline fsync2 {
	sync2
}

func fsync3 {
	biginit1
	pf0=a=0x6F pf2=a=0x03 pf1=a=0xFF
	biginit2
	sync3f
	a=0 y=16 bigmap_logo
	bigmap_wave
	bigclean
	wsync
	wsync
	frameline
	TIM64T=a=219
}
